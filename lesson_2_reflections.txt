What happens when you initialize a repository? Why do you need to do it?

   Create a repository to tell git to start to keep tract files version changes

How it the staging area different from the working directory and the repository? What value do you think it offers?

   It give us an area to manually control what files would be committed to the repository

How can you use the staging area to make sure you have one commit per logical change?

   Put files only want to be committed to the staging area

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

   If make change not affect the master version copy, or having two separate feature or version in the same time

How do the diagrams help you visualize the branch structure?

   Visualize the commit point where branch start (split) from, and the parent commit point, easy to locate the full parent path and reachable point

What is the result of merging two branches together? Why do we reporesent it in the diagram the way we do?

   Berging two branches will create a new commit that has two parents, each point to each branch accordingly. The new commit will have changes from both branches.

What are the procs and cons of Git's auotmatic merging vs. always doing merges manually?

   automatic merging procs > save time to include both changes in each branch
                     cons > might include something that not really applicable to the merged version
   manual ermging procs > resolve conflict manually and able to make sure the final version is okay
                  cons > need to spend time understanding changes in both branches copies, and identify all changes and merge them to final version
